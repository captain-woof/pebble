/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PebbleSignManager,
  PebbleSignManagerInterface,
} from "../PebbleSignManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576101e5908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c630d8e6e2c1461002557600080fd5b346101ac57806003193601126101ac57807f521e4caddd81fbdd5f556a9ab5c2a4923bf4e6832e3978f3ad043ffaf5444a6892835491600183811c908085169687156101a2575b602095868410891461018e5786869798998588529182600014610170575050600114610119575b505050601f801993849203011681019381851067ffffffffffffffff861117610105579291849192604094838652818452845191828186015281955b8387106100ed5750508394508582601f949501015201168101030190f35b868101820151898801890152958101958895506100cf565b634e487b7160e01b81526041600452602490fd5b87528592508691907f20f063e71c073277a37d060f904028265ae654567b12df4d619f78a29be0123f5b82841061015857505050820101388080610093565b80548488018601528695508794909301928101610143565b93509450505060ff191682840152151560051b820101388080610093565b634e487b7160e01b88526022600452602488fd5b91607f169161006c565b80fdfea2646970667358221220aca454a4a73aea1e42eccd604cd04b0a648aae621e6c62573f196046a638ff4664736f6c63430008110033";

type PebbleSignManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PebbleSignManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PebbleSignManager__factory extends ContractFactory {
  constructor(...args: PebbleSignManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PebbleSignManager> {
    return super.deploy(overrides || {}) as Promise<PebbleSignManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PebbleSignManager {
    return super.attach(address) as PebbleSignManager;
  }
  override connect(signer: Signer): PebbleSignManager__factory {
    return super.connect(signer) as PebbleSignManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PebbleSignManagerInterface {
    return new utils.Interface(_abi) as PebbleSignManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PebbleSignManager {
    return new Contract(address, _abi, signerOrProvider) as PebbleSignManager;
  }
}
